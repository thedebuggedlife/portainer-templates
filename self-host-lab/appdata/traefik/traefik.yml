global:
  checkNewVersion: false
  sendAnonymousUsage: false

entryPoints:
  cloudflare:
    address: :80
  # Increase timeouts to support large file uploads to immich
    transport:
      respondingTimeouts:
        readTimeout: 600s
        idleTimeout: 600s
        writeTimeout: 600s
  forwardedHeaders:
    # Trust all forwarded headers
    insecure: true
    http:
    middlewares:
      - securityHeaders
  
  tailnet:
    address: :443
  http:
    middlewares:
      - securityHeaders
    tls:
      certResolver: tailnetResolver
    # domains:
    #   - main: ==> Use $TRAEFIK_ENTRYPOINTS_tailnet_HTTP_TLS_DOMAINS_0_MAIN ("*.example.com")
    #     sans: ==> Use $TRAEFIK_ENTRYPOINTS_tailnet_HTTP_TLS_DOMAINS_0_SANS ("example.com")

# Certificate resolvers for SSL connections
certificatesResolvers:
  tailnetResolver:
    acme:
      email: # ==> Use $TRAEFIK_CERTIFICATERESOLVERS_tailnetResolver_ACME_EMAIL ("user@example.com")
      storage: /etc/traefik/acme.json
      dnsChallenge:
        provider: cloudflare
        propagation:
          delayBeforeChecks: 120s

http:
  middlewares:
    securityHeaders:
      headers:
        customResponseHeaders:
          server: ""
        sslProxyHeaders:
          X-Forwarded-Proto: https
        referrerPolicy: "strict-origin-when-cross-origin"
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        contentTypeNosniff: true
        browserXssFilter: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsSeconds: 63072000
        stsPreload: true
  # Add to sites that do not want their content indexed by search engines (e.g. Google)
    noIndexHeaders:
      headers:
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow"
    # Add to sites where Authelia auth needs to be applied by Traefik itself
  authelia:
      forwardauth:
        # address: ==> Use $TRAEFIK_HTTP_MIDDLEWARES_AUTH_FORWARDAUTH_ADDRESS ("http://authelia:9091/api/verify?rd=https://auth.example.com/")
        trustForwardHeader: true
        authResponseHeaders:
          - Remote-User
          - Remote-Groups
          - Remote-Name
          - Remote-Email

providers:
  providersThrottleDuration: 2s
  docker:
    endpoint: "unix:///var/run/docker.sock"
    watch: true
    # network: ==> Use $TRAEFIK_PROVIDERS_DOCKER_NETWORK ("proxy")
    # defaultRule: ==> Use $TRAEFIK_PROVIDERS_DOCKER_DEFAULTRULE ("Host(`{{ lower (trimPrefix `/` .Name )}}.example.com`)")
    exposedByDefault: false

# serversTransport:
#   insecureSkipVerify: ==> Use $TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY ("true")

# Enable admin web UI
api:
  dashboard: true
  insecure: false

# Enable Prometheus scrape endpoint
metrics:
  prometheus:
    entryPoint: traefik
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0

# Log level INFO|DEBUG|ERROR
log:
  level: INFO